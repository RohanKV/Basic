1. Write a program to print sum of n numbers.
#include<stdio.h>
void main()
{
  int a[100],n,i,sum = 0;
  printf("Enter the length of numbers:");
  scanf("%d",&n);
  printf(" \n Enter the numbers to be summed: ");
  for(i=0;i<n;i++){
    scanf("%d",a[i]);
  }
  for(i=0;i<n;i++){
    sum = sum+a[i];
  }
  printf("\n Sum: %d ",sum);
}

USING STRUCTURE GLOBAL VARIABLEs:

#include<stdio.h>
struct mem
{
    int length;
    int a[100];
    int sum;
}s;

int input()
{
    struct s;
    printf("Enter no of elements:");
    scanf("%d",&s.length);
    printf("\n Enter the elements:");
    for(int i=0;i<s.length;i++){
        scanf("%d",&s.a[i]);
    }
}

int compute(int length, int a[])
{
    struct s;
    for(int i=0;i<length;i++){
        s.sum = s.sum + a[i];
    } 
}

void output(int s)
{
    printf("The Sum is: %d", s);
}

void main()
{
    struct s;
    input();
    compute(s.length, s.a);
    output(s.sum);  
}

USING STRUCTURE NOT AS GLOBAL VARIABLES:
#include<stdio.h>
struct mem
{
    int length;
    int a[100];
    int sum;
};

struct mem input()
{
    struct mem s;
    printf("Enter no of elements:");
    scanf("%d",&s.length);
    printf("\n Enter the elements:");
    for(int i=0;i<s.length;i++){
        scanf("%d",&s.a[i]);
    }
    return s;
}

struct mem compute()
{
    struct mem s;
    s.sum = 0;
    for(int i = 0 ;  i < s.length ; i++){
        s.sum = s.sum + s.a[i];
    } 
    return s;
}

struct mem output()
{
    struct mem s;
    printf("The Sum is: %d", s.sum);
}

int main()
{
    struct mem s;
    input();
    compute();
    output();
    return 0;
}


2.Write function to get n numbers from the user.
struct mem input()
{
    struct mem s;
    printf("Enter no of elements:");
    scanf("%d",&s.length);
    printf("\n Enter the elements:");
    for(int i=0;i< s.length;i++){
        scanf("%d",&s.a[i]);
    }
}

3. Write function to compute the sum of n numbers.
struct mem compute()
{
    struct mem s;
    s.sum = 0;
    for(int i = 0 ;  i < s.length ; i++){
        s.sum = s.sum + s.a[i];
    } 
    return s;
}

4. Write a program to find the sum of square roots of n numbers.
#include<stdio.h>
#include<math.h>
struct mem
{
    int length;
    int a[100];
    float sum;
};

struct mem input()
{
    struct mem s;
    printf("Enter no of elements:");
    scanf("%d",&s.length);
    printf("\n Enter the elements:");
    for(int i=0;i<s.length;i++){
        scanf("%d",&s.a[i]);
    }
    return s;
}

struct mem compute()
{
    struct mem s;
    s.sum = 0;
    for(int i = 0; i < s.length ; i++){
        s.sum = s.sum + sqrt(s.a[i]);
    }
    return s;
}

struct mem output()
{
    struct mem s;
    printf("The Sum is: %f", s.sum);
}

int main()
{
    struct mem s;
    input();
    compute();
    output();
    return 0;
}

4. Write a program to find the smallest of n numbers.
#include<stdio.h>
struct small
{
    int a[100];
    int n;
    int small;
}s;

void input()
{
    printf("Enter the number of numbers: ");
    scanf("%d", &s.n);
    printf("Enter the numbers: \n");
    for(int i = 0; i < s.n; i++){
        scanf("%d", &s.a[i]);
    }
}

void compute(int n,int a[])
{
    s.small = a[0];
    for(int i=0;i<s.n;i++){
        if(s.a[i] < s.small)
        {
            s.small = s.a[i];
        }
    }
}

void output(int s)
{
    printf("Smallest is: %d", s);
}
void main()
{
    input();
    compute(s.n,s.a);
    output(s.small);
}

5. Write a program to find the smallest two numbers of n numbers.

